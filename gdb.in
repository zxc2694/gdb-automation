file main.elf
target remote :3333
#+set logging on 
set $osp = $sp
set $sp = $sp - 16
b main.c:5
c
call RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_AFIO, ENABLE)
call RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE)
set (*(uint32_t *)$osp) = 67108872u
call GPIO_Init(GPIOA, $osp)
set (*(uint32_t *)$osp) = 402849796u
call GPIO_Init(GPIOA, $osp)
call USART_StructInit($osp)
call USART_Init(USART2, $osp)
call USART_Cmd(USART2, ENABLE)
set $osp=0
while(*(char *)(greeting+$osp)!='\0')
call USART_SendData(USART2, *(char *)(greeting+$osp))
set $osp=$osp+1
end
set $sp=$sp+16
c

/*
 *set ((USART_InitTypeDef*)$osp)->USART_BaudRate = 9600
 *set ((USART_InitTypeDef*)$osp)->USART_WordLength = USART_WordLength_8b
 *set ((USART_InitTypeDef*)$osp)->USART_StopBits = USART_StopBits_1
 *set ((USART_InitTypeDef*)$osp)->USART_Parity = USART_Parity_No
 *set ((USART_InitTypeDef*)$osp)->USART_HardwareFlowControl = USART_HardwareFlowControl_None
 *set ((USART_InitTypeDef*)$osp)->USART_Mode = USART_Mode_Rx | USART_Mode_Tx
 *call USART_Init(USART2, $osp)
 *call USART_Cmd(USART2, ENABLE)
 *c
 *call USART_SendData(USART2, 'H')
 *call USART_SendData(USART2, 'e')
 *call USART_SendData(USART2, 'l')
 *call USART_SendData(USART2, 'l')
 *call USART_SendData(USART2, 'o')
 *call USART_SendData(USART2, '!')
*/
